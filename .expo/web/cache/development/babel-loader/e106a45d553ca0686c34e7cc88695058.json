{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chabbe\\\\Documents\\\\GitHub\\\\Labb1-react\\\\theme\\\\theme-context.js\";\nimport React, { createContext, useState } from 'react';\nvar themes = {\n  dark: {\n    backgroundColor: '#151618',\n    backgroundCard: '#25282c',\n    color: 'white'\n  },\n  light: {\n    backgroundColor: '#EFF0F3',\n    backgroundCard: '#fff',\n    color: '#1d1d1d'\n  }\n};\nvar initialState = {\n  dark: false,\n  theme: themes.light,\n  toggle: function toggle() {}\n};\nvar ThemeContext = createContext(initialState);\n\nfunction ThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dark = _useState2[0],\n      setDark = _useState2[1];\n\n  var toggle = function toggle() {\n    setDark(!dark);\n  };\n\n  var theme = dark ? themes.dark : themes.light;\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      dark: dark,\n      theme: theme,\n      toggle: toggle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, children);\n}\n\nexport { ThemeProvider, ThemeContext };","map":{"version":3,"sources":["C:/Users/Chabbe/Documents/GitHub/Labb1-react/theme/theme-context.js"],"names":["React","createContext","useState","themes","dark","backgroundColor","backgroundCard","color","light","initialState","theme","toggle","ThemeContext","ThemeProvider","children","setDark"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,SADf;AAEFC,IAAAA,cAAc,EAAE,SAFd;AAGFC,IAAAA,KAAK,EAAE;AAHL,GADK;AAMXC,EAAAA,KAAK,EAAE;AACHH,IAAAA,eAAe,EAAE,SADd;AAEHC,IAAAA,cAAc,EAAE,MAFb;AAGHC,IAAAA,KAAK,EAAE;AAHJ;AANI,CAAf;AAaA,IAAME,YAAY,GAAG;AACjBL,EAAAA,IAAI,EAAE,KADW;AAEjBM,EAAAA,KAAK,EAAEP,MAAM,CAACK,KAFG;AAGjBG,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAHC,CAArB;AAKA,IAAMC,YAAY,GAAGX,aAAa,CAACQ,YAAD,CAAlC;;AAEA,SAASI,aAAT,OAAqC;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACjC,kBAAwBZ,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAaW,OAAb;;AAGA,MAAMJ,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBI,IAAAA,OAAO,CAAC,CAACX,IAAF,CAAP;AAEH,GAHD;;AAMA,MAAMM,KAAK,GAAGN,IAAI,GAAGD,MAAM,CAACC,IAAV,GAAiBD,MAAM,CAACK,KAA1C;AAEA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,IAAI,EAAJA,IAAF;AAAQM,MAAAA,KAAK,EAALA,KAAR;AAAeC,MAAAA,MAAM,EAANA;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,QADL,CADJ;AAKH;;AAED,SAASD,aAAT,EAAwBD,YAAxB","sourcesContent":["import React, { createContext, useState } from 'react';\r\nconst themes = {\r\n    dark: {\r\n        backgroundColor: '#151618',\r\n        backgroundCard: '#25282c',\r\n        color: 'white'\r\n    },\r\n    light: {\r\n        backgroundColor: '#EFF0F3',\r\n        backgroundCard: '#fff',\r\n        color: '#1d1d1d'\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    dark: false,\r\n    theme: themes.light,\r\n    toggle: () => {}\r\n}\r\nconst ThemeContext = createContext(initialState);\r\n\r\nfunction ThemeProvider({ children }) {\r\n    const [dark, setDark] = useState(false) // Default theme is light\r\n\r\n    // To toggle between dark and light modes\r\n    const toggle = () => {\r\n        setDark(!dark)\r\n  \r\n    }\r\n\r\n    // Filter the styles based on the theme selected\r\n    const theme = dark ? themes.dark : themes.light\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ dark, theme, toggle }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }"]},"metadata":{},"sourceType":"module"}