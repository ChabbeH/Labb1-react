{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chabbe\\\\Desktop\\\\Demo\\\\rn-react-labb1\\\\theme-context.js\";\nimport React from 'react';\nvar initialState = {\n  dark: false,\n  theme: themes.light,\n  toggle: function toggle() {}\n};\nvar ThemeContext = React.createContext(initialState);\nvar themes = {\n  dark: {\n    backgroundColor: 'black',\n    backgroundCard: '#25282c',\n    color: 'white'\n  },\n  light: {\n    backgroundColor: 'white',\n    backgroundCard: '#fff',\n    color: 'black'\n  }\n};\n\nfunction ThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dark = _React$useState2[0],\n      setDark = _React$useState2[1];\n\n  var toggle = function toggle() {\n    setDark(!dark);\n  };\n\n  var theme = dark ? themes.dark : themes.light;\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      dark: dark,\n      toggle: toggle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, children);\n}\n\nexport { ThemeProvider, ThemeContext };","map":{"version":3,"sources":["C:/Users/Chabbe/Desktop/Demo/rn-react-labb1/theme-context.js"],"names":["React","initialState","dark","theme","themes","light","toggle","ThemeContext","createContext","backgroundColor","backgroundCard","color","ThemeProvider","children","useState","setDark"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE,KADY;AAElBC,EAAAA,KAAK,EAAEC,MAAM,CAACC,KAFI;AAGlBC,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAHE,CAArB;AAKA,IAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,CAAoBP,YAApB,CAArB;AAEA,IAAMG,MAAM,GAAG;AACXF,EAAAA,IAAI,EAAE;AACFO,IAAAA,eAAe,EAAE,OADf;AAEFC,IAAAA,cAAc,EAAE,SAFd;AAGFC,IAAAA,KAAK,EAAE;AAHL,GADK;AAMVN,EAAAA,KAAK,EAAE;AACLI,IAAAA,eAAe,EAAE,OADZ;AAELC,IAAAA,cAAc,EAAE,MAFX;AAGLC,IAAAA,KAAK,EAAE;AAHF;AANG,CAAf;;AAaA,SAASC,aAAT,OAAqC;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACjC,wBAAwBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAAxB;AAAA;AAAA,MAAOZ,IAAP;AAAA,MAAaa,OAAb;;AAGA,MAAMT,MAAM,GAAG,SAATA,MAAS,GAAM;AAClBS,IAAAA,OAAO,CAAC,CAACb,IAAF,CAAP;AACF,GAFD;;AAKA,MAAMC,KAAK,GAAGD,IAAI,GAAGE,MAAM,CAACF,IAAV,GAAiBE,MAAM,CAACC,KAA1C;AAEA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAALA,KAAF;AAASD,MAAAA,IAAI,EAAJA,IAAT;AAAeI,MAAAA,MAAM,EAANA;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIO,QADJ,CADJ;AAKC;;AACD,SAASD,aAAT,EAAwBL,YAAxB","sourcesContent":["import React from 'react';\r\n\r\nconst initialState = {\r\n   dark: false,\r\n   theme: themes.light,\r\n   toggle: () => {}\r\n }\r\nconst ThemeContext = React.createContext(initialState)\r\n\r\nconst themes = {\r\n    dark: {\r\n        backgroundColor: 'black',\r\n        backgroundCard: '#25282c',\r\n        color: 'white'\r\n      },\r\n     light: {\r\n       backgroundColor: 'white',\r\n       backgroundCard: '#fff',\r\n       color: 'black'\r\n     }\r\n}\r\n\r\nfunction ThemeProvider({ children }) {\r\n    const [dark, setDark] = React.useState(false) // Default theme is light\r\n    \r\n    // To toggle between dark and light modes\r\n    const toggle = () => {\r\n       setDark(!dark)\r\n    }\r\n    \r\n    // Filter the styles based on the theme selected\r\n    const theme = dark ? themes.dark : themes.light\r\n    \r\n    return (\r\n        <ThemeContext.Provider value={{ theme, dark, toggle }}>\r\n           {children}\r\n        </ThemeContext.Provider>\r\n        )\r\n    }\r\n    export { ThemeProvider, ThemeContext }"]},"metadata":{},"sourceType":"module"}